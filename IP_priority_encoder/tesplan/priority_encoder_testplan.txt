### Test Case 1
- **Name:** Single Input Test
- **Description:** Test the priority encoder with a single `1` bit in all possible positions to verify correct position encoding.
- **Expectation:** The output `pos` should reflect the position of the `1` bit in the input.
- **Steps:**
  1. Randomize `in` to random values such that only one bit high.
  2. The output `pos` should be the position of the least significant `1` bit.

### Test Case 2
- **Name:** Multiple Inputs Test
- **Description:** Test with multiple `1`s (more than 1) in the input to verify that the priority encoder selects the least significant set bit.
- **Expectation:** The output `pos` should be the position of the least significant `1` bit.
- **Steps:**
  1. Randomize `in` to random values such that count ones more than 1.
  2. The output `pos` should be the position of the least significant `1` bit.
 
### Test Case 3
- **Name:** All Zeros Input Test
- **Description:** Apply an all-zero input vector to verify the correct output is `2'd0`.
- **Expectation:** The output `pos` should be `2'd0`.
- **Steps:**
  1. Apply `in = 4'b0000`, assert `clk` and observe `pos = 2'd0`.

### Test Case 4
- **Name:** Reset Functionality Test
- **Description:** Verify that the asynchronous reset sets the output to `2'd0`.
- **Expectation:** Upon asserting `reset`, `pos` should immediately reset to `2'd0`.
- **Steps:**
  1. Apply any `in` value, assert `clk`.
  2. Assert `reset` and observe `pos = 2'd0`.
  3. Deassert `reset`, input persists, and observe `pos` remains `2'd0` until next `clk`.
