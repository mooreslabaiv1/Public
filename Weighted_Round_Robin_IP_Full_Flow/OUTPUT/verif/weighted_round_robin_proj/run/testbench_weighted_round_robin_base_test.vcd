$date
	Fri Sep  5 09:09:15 2025
$end

$version
	Synopsys VCS version W-2024.09_Full64
$end

$timescale
	1ns
$end

$comment Csum: 1 11bb74c8e4a897ed $end


$scope module weighted_round_robin_tb_top $end

$scope begin unnamed$$_0 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope module clk_rst_if_inst $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # clk_div $end
$upscope $end


$scope module rr_request_if_inst $end
$var reg 1 $ rst $end
$var reg 32 % req [31:0] $end
$var reg 1 & ack $end
$var reg 1 ' clk $end
$upscope $end


$scope module rr_grant_if_inst $end
$var reg 1 $ rst $end
$var reg 32 ( gnt_w [31:0] $end
$var reg 5 ) gnt_id [4:0] $end
$var reg 1 ' clk $end
$upscope $end


$scope module prio_update_if_inst $end
$var reg 1 $ rst $end
$var reg 4 * prio [3:0] $end
$var reg 5 + prio_id [4:0] $end
$var reg 1 , prio_upt $end
$var reg 1 ' clk $end
$upscope $end


$scope module weighted_round_robin_inst $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var wire 32 / req [31:0] $end
$var wire 1 0 ack $end
$var reg 32 1 gnt_w [31:0] $end
$var reg 5 2 gnt_id [4:0] $end
$var wire 4 3 prio [3:0] $end
$var wire 5 4 prio_id [4:0] $end
$var wire 1 5 prio_upt $end
$var reg 5 6 pointer_r [4:0] $end
$var reg 5 7 pointer_n [4:0] $end

$scope begin wrr_next_state $end
$var reg 32 8 k [31:0] $end
$var reg 32 9 j [31:0] $end
$var reg 1 : found $end
$var reg 5 ; idx [4:0] $end

$scope begin ack_set_loop $end

$scope begin ack_set_loop_req $end
$upscope $end

$upscope $end


$scope begin match_found $end

$scope begin update_credits $end
$var reg 5 < index [4:0] $end
$upscope $end

$upscope $end


$scope begin update_credits $end
$var reg 5 = index [4:0] $end
$upscope $end

$upscope $end


$scope begin unnamed$$_0 $end
$upscope $end


$scope begin unnamed$$_1 $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
b00000 )
b00000000000000000000000000000000 (
bxxxxx +
bxxxx *
0:
b00000 2
b00000000000000000000000000000000 1
bxxxxx 7
bxxxxx 6
bxxxxx ;
bxxxxx <
bxxxxx =
b00000000000000000000000000100000 8
b00000000000000000000000000000000 9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxx 3
bxxxxx 4
0!
0#
1"
0'
0-
1$
1.
x0
x5
x&
x,
$end
#3
1!
1'
1-
b00000 6
b11111 ;
b00000 7
b11111 =
#4
b0000 *
b00000 +
0,
05
b00000000000000000000000000000000 %
0&
00
b0000 3
b00000 4
b00000000000000000000000000000000 /
#6
1#
0!
0'
0-
#9
1!
1'
1-
#10
0#
#12
0!
0'
0-
#14
1#
#15
1!
1'
1-
#18
0#
0!
0'
0-
#21
1!
1'
1-
#22
1#
#24
0!
0'
0-
#26
0#
#27
1!
1'
1-
#30
1#
0!
0'
0-
#33
1!
1'
1-
#34
0#
#36
0!
0'
0-
#38
1#
#39
1!
1'
1-
#42
0#
0!
0'
0-
#45
1!
1'
1-
#46
1#
#48
0!
0'
0-
#50
0#
#51
1!
1'
1-
#54
1#
0!
0'
0-
0"
0$
0.
